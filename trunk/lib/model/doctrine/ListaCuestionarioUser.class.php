<?php

/**
 * ListaCuestionarioUser
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ListaCuestionarioUser extends BaseListaCuestionarioUser
{
    /**
     * Test si existe un comentario en las respuestas
     */
    public function hasComentario()
    {
        foreach ($this->getRespuestas() as $respuesta) {
            if ($respuesta->getRespuesta() != '' && strlen($respuesta->getRespuesta()) > 1) {
                return true;
            }
        }
        return false;

    }

    public function getComentario()
    {
        $comentarios = array();
        foreach ($this->getRespuestas() as $respuesta) {
            if ($respuesta->getRespuesta() != '' && strlen($respuesta->getRespuesta()) > 1) {
                $comentarios[] = $respuesta->getRespuesta();
            }
        }

        return implode('. ', $comentarios);
    }

    public function getReference()
    {
        if ($this->getEmpresaId()) {
            return 'Empresa';
        } else {
            return 'Producto';
        }

    }
    /**
     * Borra los comentarios del cuestionario
     */
    public function deleteComentarios()
    {
        foreach ($this->getRespuestas() as $respuesta) {
            if ($respuesta->getRespuesta() != '' && strlen($respuesta->getRespuesta()) > 1) {
                $respuesta->setRespuesta('');
                $respuesta->save();
            }
        }

        return true;

    }

    /**
     * Devuelve los puntos totales del cuestionario
     */
    public function getPuntos()
    {
        $totalPuntos = 0;

        foreach ($this->getRespuestas() as $respuesta) {
            $totalPuntos += (int)$respuesta->getRespuesta();
        }
        return $totalPuntos;
    }

    /**
     * Actualiza los kpis en la tabla kpiEmpresa
     */
    public function saveKpis($tipo = 'empresa')
    {
        foreach ($this->getRespuestas() as $respuesta) {

            $kpi = $respuesta->getPregunta()->getKpi();
            if (null == $kpi->getId()) continue;
            $kpiValue = $respuesta->getRespuesta();

            if ($tipo == 'empresa') {

                $kpiEmpresa = Doctrine_Core::getTable('KpiEmpresaProducto')->findByEmpresaIdAndKpiId($this->getEmpresaId(), $kpi->getId());
                if (!$kpiEmpresa) {
                    $kpiEmpresa = new KpiEmpresaProducto();
                    $kpiEmpresa->setEmpresaId($this->getEmpresaId());
                    $kpiEmpresa->setKpiId($kpi->getId());

                }
            } else {
                $kpiEmpresa = Doctrine_Core::getTable('KpiEmpresaProducto')->findByProductoIdAndKpiId($this->getProductoId(), $kpi->getId());
                if (!$kpiEmpresa) {
                    $kpiEmpresa = new KpiEmpresaProducto();
                    $kpiEmpresa->setProductoId($this->getProductoId());
                    $kpiEmpresa->setKpiId($kpi->getId());

                }
            }

            $kpiEmpresa->addValue($kpiValue);
        }
    }


    public function substractKpis($tipo = 'empresa')
    {
        foreach ($this->getRespuestas() as $respuesta)
        {
            $kpi = $respuesta->getPregunta()->getKpi();
            if ($kpi->isNew()) continue;
            $kpiValue = $respuesta->getRespuesta();
            if ($tipo == 'empresa')
            {
                $kpi = Doctrine_Core::getTable('KpiEmpresaProducto')->findByEmpresaIdAndKpiId($this->getEmpresaId(), $kpi->getId());

            } else {
                $kpi = Doctrine_Core::getTable('KpiEmpresaProducto')->findByProductoIdAndKpiId($this->getProductoId(), $kpi->getId());

            }
            $kpi->substractValue($kpiValue);
        }
    }

    public function isAprobado()
    {
        return $this->getAprobado();
    }

    public function markAsDisabled()
    {
        $this->setDisabled(true);
        $this->save();
    }

    public function markAsEnabled()
    {
        $this->setDisabled(false);
        $this->save();
    }

}
