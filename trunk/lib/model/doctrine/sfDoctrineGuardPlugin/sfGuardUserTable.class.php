<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable {

  /**
   * Returns an instance of this class.
   *
   * @return object sfGuardUserTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('sfGuardUser');
  }

  /**
   * method returns user record sorted according to reward raking
   * @return Doctrine_Query
   */
  public function getUsersForRewardRanking() {
    // create reward ranking query
    $reward_ranking_query = Doctrine_Query::create()
            ->from('sfGuardUserProfile sgup')
            ->leftJoin('sgup.User sgu')
            ->where('sgup.money_sum > 0')
            ->andWhere('sgu.is_disabled <> 1')
            ->andWhere('sgu.is_active = 1')
            ->groupBy('sgu.username')
            ->orderBy('sgup.money_sum DESC, sgu.username ASC');
            
    return $reward_ranking_query;
  }

  /**
   * method returns user record sorted according to hierarchy raking
   * @return Doctrine_Query
   */
  public function getUsersForHierarchyRanking() {
    // create hierarchy ranking query
    $hierarchy_ranking_query = Doctrine_Query::create()
            ->from('sfGuardUserProfile sgup')
            ->leftJoin('sgup.User sgu')
            ->where('sgup.accumulated_points > 0')
            ->andWhere('sgup.id=sgu.id')
            ->andWhere('sgu.is_disabled <> 1')
            ->andWhere('sgu.is_active = 1')
            ->groupBy('sgu.username')
            ->orderBy('sgup.accumulated_points DESC, sgu.username ASC');
            
    return $hierarchy_ranking_query;
  }

  /**
   * fetch username records
   * @return type
   */
  public function getUsernames() {
    //create username query
    $username_query = Doctrine_Query::create()
            ->select('u.username')
            ->from('sfGuardUser u');
    $user_records = $username_query->fetchArray();

    //create username record
    $username_array = array('' => 'Selecciona Usuario');
    foreach ($user_records as $key => $user_record) {
      $username_array[$user_record['username']] = $user_record['username'];
    }

    return $username_array;
  }

  /**
   * Fetch administration emails record
   * @return Arary
   */
  public function getAdminEmails() {
    //get administration email array
    $administration_email = Doctrine::getTable('AdministrationEmails')->getEmails();


    //create admin email query
    $admin_email_query = Doctrine_Query::create()
            ->select('sgu.email_address')
            ->from('sfGuardUser sgu')
            ->leftJoin('sgu.sfGuardUserPermission sgup')
            ->whereNotIn('sgu.email_address', $administration_email)
            ->andWhere('sgup.user_id IS NOT NULL');
    $admin_email_record = $admin_email_query->fetchArray();
    $administration_email_array = array('Dirección de correo electrónico Selecte');
    foreach ($admin_email_record as $index => $email) {
      $administration_email_array[$email['email_address']] = $email['email_address'];
    }
    return $administration_email_array;
  }

  /**
   * Fetch user record by given email id
   * @param type $email Email Address
   * @return Doctrine Record
   */
  public function getUserByEmail($email) {
    //create user query by email
    $user_query_by_email = Doctrine_Query::create()
            ->select('sgu.id')
            ->from('sfGuardUser sgu')
            ->where('sgu.email_address =?', $email);
    return $user_query_by_email->fetchOne();
  }


  /**
   * Fetch user combo list   
   * @return Doctrine Record
   */
  public static function getUserComboList() {
    return  Doctrine_Query::create()->select('u.id, SUBSTR(u.username,0,25) as u.username')->from('sfGuardUser u')->orderBy('u.username');
  }


}