<?php

/**
 * sfGuardUserProfileTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserProfileTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserProfileTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('sfGuardUserProfile');
    }

    public static function addMetaDataOnLogin() {
        $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
        $profile->setIsOnline(true);
        $profile->setBlockedLimit(0);
        $profile->save();

        // guardamos registro de acceso para saber cuanta gente se conectÃ³ ayer
        $users_online_yesterday = new UsersOnlineYesterday();
        $users_online_yesterday->setUserId($profile->getUserId());
        $users_online_yesterday->setLoggedIn(date('Y-m-d'));
        $users_online_yesterday->save();

        sfGuardUserProfileTable::removeOldSessions();
    }

    public static function addMetaDataOnLogout() {
        if (sfContext::getInstance()->getUser()->getGuardUser()) {
            $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
            $profile->setIsOnline(false);
            $profile->save();
        }

        sfGuardUserProfileTable::removeOldSessions();
    }

    public static function removeOldSessions() {
        Doctrine::getTable('UsersOnlineYesterday')->createQuery()->where('logged_in < DATE_SUB(CURDATE(), INTERVAL 1 DAY)')->delete()->execute();

        Doctrine_Manager::getInstance()->getCurrentConnection()->execute("
            UPDATE sf_guard_user_profile sgup LEFT JOIN sf_guard_user sgu ON sgup.id=sgu.id
            SET is_online=0
            WHERE last_login <= DATE_SUB(NOW(), INTERVAL 3 HOUR)
        ");
    }

    public static function addPuntos() {
        $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
        $puntos_data = Doctrine::getTable('ColaboradorPuntoDefinicion')->findOneBy('codigo', 'audit_lista_blanca');
        $puntos = $puntos_data->getPuntos() + $profile->getAccumulatedPoints();
        $puntos_caja = $puntos_data->getPuntos() + $profile->getChangePoints();
        $profile->setAccumulatedPoints($puntos);
        $profile->setChangePoints($puntos_caja);
        $profile->save();

        return true;
    }

    public static function removePuntos($user_id="") {
        if($user_id){
            $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', $user_id);
        }else{
            $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
        }
        
        $puntos_data = Doctrine::getTable('ColaboradorPuntoDefinicion')->findOneBy('codigo', 'audit_lista_blanca');
        $puntos = $profile->getAccumulatedPoints() - $puntos_data->getPuntos();
        $puntos_caja = $profile->getChangePoints() - $puntos_data->getPuntos();
        $profile->setAccumulatedPoints($puntos);
        $profile->setChangePoints($puntos_caja);
        $profile->save();

        return true;
    }

    public static function addPuntosCommenta() {
        $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
        $puntos_data = Doctrine::getTable('ColaboradorPuntoDefinicion')->findOneBy('codigo', 'Coment_lista_negra');
        $puntos = $puntos_data->getPuntos() + $profile->getAccumulatedPoints();
        $puntos_caja = $puntos_data->getPuntos() + $profile->getChangePoints();
        $profile->setAccumulatedPoints($puntos);
        $profile->setChangePoints($puntos_caja);
        $profile->save();

        return true;
    }

    public static function removePuntosCommenta($user_id="") {
        if($user_id){
            $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', $user_id);
        }else{
            $profile = Doctrine::getTable('sfGuardUserProfile')->findOneBy('user_id', sfContext::getInstance()->getUser()->getGuardUser()->getId());
        }
        
        $puntos_data = Doctrine::getTable('ColaboradorPuntoDefinicion')->findOneBy('codigo', 'Coment_lista_negra');
        $puntos = $profile->getAccumulatedPoints() - $puntos_data->getPuntos();
        $puntos_caja = $profile->getChangePoints() - $puntos_data->getPuntos();
        $profile->setAccumulatedPoints($puntos);
        $profile->setChangePoints($puntos_caja);
        $profile->save();

        return true;
    }

}