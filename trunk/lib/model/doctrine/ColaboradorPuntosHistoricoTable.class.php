<?php

/**
 * ColaboradorPuntosHistoricoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
use Symfony\Component\Serializer\Encoder\JsonEncoder;

class ColaboradorPuntosHistoricoTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ColaboradorPuntosHistoricoTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('ColaboradorPuntosHistorico');
    }

    /**
     * Crea una nueva entrada de log en el hitórico
     * @param integer 	$user_id		id de usuario
     * @param string 	$descripcion	Descripción
     * @param integer 	$n_puntos		Número de puntos
     * @param string 	$objeto			Clase de objeto al que se hace referencia. Por defecto es null
     * @param integer	$objeto_id		Id del objeto. Por defecto es null
     * @param string 	$tipo_punto		Tipo de punto: [rank | change_points | ambos]
     */
    public static function new_log($user_id, $descripcion, $n_puntos, $objeto = null, $objeto_id = null, $parametros = array(), $tipo_punto = 'ambos') {
        $log = new ColaboradorPuntosHistorico();

        $log->setUserId($user_id);
        $log->setPuntos($n_puntos);
        //echo $n_puntos; exit;
        $log->setDescripcion($descripcion);
        $log->setObjeto($objeto);
        $log->setObjetoId($objeto_id);
        $log->setTipoPunto($tipo_punto);
        $log->setParametros(json_encode($parametros));
        $log->save();
    }

    /**
     * method returns last cash update date for given user
     * @param String$user_id User Id
     * @return String
     */
    public function getCashUpdateDate($user_id) {
        // create last cash update query
        $last_cash_update_query = Doctrine_Query::create()
                ->from('ColaboradorPuntosHistorico cph')
                ->where('cph.user_id =?', $user_id)
                ->andWhere('cph.tipo_punto LIKE "%caja%"')
                ->andWhere('cph.status = 0')
                ->orderBy('cph.created_at DESC')
                ->limit(1);
        //get last cash update result
        /* $last_cash_update_result = $last_cash_update_query->fetchArray();

          //return result
          if($last_cash_update_result){
          return $last_cash_update_result[0]['created_at'];
          }
          return null; */
        return $last_cash_update_query->fetchOne(null, Doctrine::HYDRATE_ARRAY);
    }

}