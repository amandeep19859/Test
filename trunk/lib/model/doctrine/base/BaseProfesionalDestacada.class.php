<?php

/**
 * BaseProfesionalDestacada
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profesional_id
 * @property integer $profesional_tipo_uno_id
 * @property integer $profesional_tipo_dos_id
 * @property integer $profesional_tipo_tres_id
 * @property integer $city_id
 * @property integer $states_id
 * @property integer $rank
 * @property integer $combinado
 * @property Profesional $Profesional
 * @property ProfesionalTipoUno $ProfesionalTipoUno
 * @property ProfesionalTipoDos $ProfesionalTipoDos
 * @property ProfesionalTipoTres $ProfesionalTipoTres
 * 
 * @method integer              getProfesionalId()            Returns the current record's "profesional_id" value
 * @method integer              getProfesionalTipoUnoId()     Returns the current record's "profesional_tipo_uno_id" value
 * @method integer              getProfesionalTipoDosId()     Returns the current record's "profesional_tipo_dos_id" value
 * @method integer              getProfesionalTipoTresId()    Returns the current record's "profesional_tipo_tres_id" value
 * @method integer              getCityId()                   Returns the current record's "city_id" value
 * @method integer              getStatesId()                 Returns the current record's "states_id" value
 * @method integer              getRank()                     Returns the current record's "rank" value
 * @method integer              getCombinado()                Returns the current record's "combinado" value
 * @method Profesional          getProfesional()              Returns the current record's "Profesional" value
 * @method ProfesionalTipoUno   getProfesionalTipoUno()       Returns the current record's "ProfesionalTipoUno" value
 * @method ProfesionalTipoDos   getProfesionalTipoDos()       Returns the current record's "ProfesionalTipoDos" value
 * @method ProfesionalTipoTres  getProfesionalTipoTres()      Returns the current record's "ProfesionalTipoTres" value
 * @method ProfesionalDestacada setProfesionalId()            Sets the current record's "profesional_id" value
 * @method ProfesionalDestacada setProfesionalTipoUnoId()     Sets the current record's "profesional_tipo_uno_id" value
 * @method ProfesionalDestacada setProfesionalTipoDosId()     Sets the current record's "profesional_tipo_dos_id" value
 * @method ProfesionalDestacada setProfesionalTipoTresId()    Sets the current record's "profesional_tipo_tres_id" value
 * @method ProfesionalDestacada setCityId()                   Sets the current record's "city_id" value
 * @method ProfesionalDestacada setStatesId()                 Sets the current record's "states_id" value
 * @method ProfesionalDestacada setRank()                     Sets the current record's "rank" value
 * @method ProfesionalDestacada setCombinado()                Sets the current record's "combinado" value
 * @method ProfesionalDestacada setProfesional()              Sets the current record's "Profesional" value
 * @method ProfesionalDestacada setProfesionalTipoUno()       Sets the current record's "ProfesionalTipoUno" value
 * @method ProfesionalDestacada setProfesionalTipoDos()       Sets the current record's "ProfesionalTipoDos" value
 * @method ProfesionalDestacada setProfesionalTipoTres()      Sets the current record's "ProfesionalTipoTres" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfesionalDestacada extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profesional_destacada');
        $this->hasColumn('profesional_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('profesional_tipo_uno_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('profesional_tipo_dos_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('profesional_tipo_tres_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('rank', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('combinado', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profesional', array(
             'local' => 'profesional_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoUno', array(
             'local' => 'profesional_tipo_uno_id',
             'foreign' => 'id'));

        $this->hasOne('ProfesionalTipoDos', array(
             'local' => 'profesional_tipo_dos_id',
             'foreign' => 'id'));

        $this->hasOne('ProfesionalTipoTres', array(
             'local' => 'profesional_tipo_tres_id',
             'foreign' => 'id'));
    }
}