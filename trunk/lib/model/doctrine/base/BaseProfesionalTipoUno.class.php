<?php

/**
 * BaseProfesionalTipoUno
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $value
 * @property integer $orden
 * @property string $image
 * @property Doctrine_Collection $ProfesionalTipoDos
 * @property Doctrine_Collection $ProfesionalTipoTres
 * @property Doctrine_Collection $Pd
 * @property Doctrine_Collection $Profesional
 * @property Doctrine_Collection $ProfesionalDestacadas
 * 
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getValue()                 Returns the current record's "value" value
 * @method integer             getOrden()                 Returns the current record's "orden" value
 * @method string              getImage()                 Returns the current record's "image" value
 * @method Doctrine_Collection getProfesionalTipoDos()    Returns the current record's "ProfesionalTipoDos" collection
 * @method Doctrine_Collection getProfesionalTipoTres()   Returns the current record's "ProfesionalTipoTres" collection
 * @method Doctrine_Collection getPd()                    Returns the current record's "Pd" collection
 * @method Doctrine_Collection getProfesional()           Returns the current record's "Profesional" collection
 * @method Doctrine_Collection getProfesionalDestacadas() Returns the current record's "ProfesionalDestacadas" collection
 * @method ProfesionalTipoUno  setName()                  Sets the current record's "name" value
 * @method ProfesionalTipoUno  setValue()                 Sets the current record's "value" value
 * @method ProfesionalTipoUno  setOrden()                 Sets the current record's "orden" value
 * @method ProfesionalTipoUno  setImage()                 Sets the current record's "image" value
 * @method ProfesionalTipoUno  setProfesionalTipoDos()    Sets the current record's "ProfesionalTipoDos" collection
 * @method ProfesionalTipoUno  setProfesionalTipoTres()   Sets the current record's "ProfesionalTipoTres" collection
 * @method ProfesionalTipoUno  setPd()                    Sets the current record's "Pd" collection
 * @method ProfesionalTipoUno  setProfesional()           Sets the current record's "Profesional" collection
 * @method ProfesionalTipoUno  setProfesionalDestacadas() Sets the current record's "ProfesionalDestacadas" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfesionalTipoUno extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profesional_tipo_uno');
        $this->hasColumn('name', 'string', 70, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 70,
             ));
        $this->hasColumn('value', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('orden', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('image', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProfesionalTipoDos', array(
             'local' => 'id',
             'foreign' => 'profesional_tipo_uno_id'));

        $this->hasMany('ProfesionalTipoTres', array(
             'local' => 'id',
             'foreign' => 'profesional_tipo_uno_id'));

        $this->hasMany('Pd', array(
             'local' => 'id',
             'foreign' => 'profesional_tipo_uno_id'));

        $this->hasMany('Profesional', array(
             'local' => 'id',
             'foreign' => 'profesional_tipo_uno_id'));

        $this->hasMany('ProfesionalDestacada as ProfesionalDestacadas', array(
             'local' => 'id',
             'foreign' => 'profesional_tipo_uno_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'id',
              1 => 'name',
             ),
             ));
        $this->actAs($sluggable0);
    }
}