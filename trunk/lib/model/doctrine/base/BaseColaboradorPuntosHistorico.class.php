<?php

/**
 * BaseColaboradorPuntosHistorico
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property decimal $puntos
 * @property integer $objeto_id
 * @property string $objeto
 * @property string $descripcion
 * @property string $parametros
 * @property string $tipo_punto
 * @property boolean $status
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer                    getUserId()      Returns the current record's "user_id" value
 * @method decimal                    getPuntos()      Returns the current record's "puntos" value
 * @method integer                    getObjetoId()    Returns the current record's "objeto_id" value
 * @method string                     getObjeto()      Returns the current record's "objeto" value
 * @method string                     getDescripcion() Returns the current record's "descripcion" value
 * @method string                     getParametros()  Returns the current record's "parametros" value
 * @method string                     getTipoPunto()   Returns the current record's "tipo_punto" value
 * @method boolean                    getStatus()      Returns the current record's "status" value
 * @method sfGuardUser                getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method ColaboradorPuntosHistorico setUserId()      Sets the current record's "user_id" value
 * @method ColaboradorPuntosHistorico setPuntos()      Sets the current record's "puntos" value
 * @method ColaboradorPuntosHistorico setObjetoId()    Sets the current record's "objeto_id" value
 * @method ColaboradorPuntosHistorico setObjeto()      Sets the current record's "objeto" value
 * @method ColaboradorPuntosHistorico setDescripcion() Sets the current record's "descripcion" value
 * @method ColaboradorPuntosHistorico setParametros()  Sets the current record's "parametros" value
 * @method ColaboradorPuntosHistorico setTipoPunto()   Sets the current record's "tipo_punto" value
 * @method ColaboradorPuntosHistorico setStatus()      Sets the current record's "status" value
 * @method ColaboradorPuntosHistorico setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseColaboradorPuntosHistorico extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('colaborador_puntos_historico');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('puntos', 'decimal', 20, array(
             'type' => 'decimal',
             'length' => 20,
             'scale' => '10',
             ));
        $this->hasColumn('objeto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('objeto', 'string', 255, array(
             'type' => 'string',
             'size' => 255,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'string', 255, array(
             'type' => 'string',
             'size' => 255,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('parametros', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('tipo_punto', 'string', 255, array(
             'type' => 'string',
             'size' => 255,
             'length' => 255,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}