<?php

/**
 * BaseConcursoCp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $incidencia
 * @property integer $concurso_estado_id
 * @property integer $concurso_tipo_id
 * @property integer $empresa_id
 * @property integer $producto_id
 * @property integer $concurso_categoria_id
 * @property date $fecha_activacion
 * @property date $fecha_referendum
 * @property integer $road_type_id
 * @property integer $states_id
 * @property integer $city_id
 * @property string $concurso_address
 * @property string $concurso_code
 * @property string $concurso_otra
 * @property string $mail
 * @property integer $user_id
 * @property boolean $destacado
 * @property date $fecha_destacado
 * @property ConcursoCategoria $ConcursoCategoria
 * @property RoadType $RoadType
 * @property States $States
 * @property City $City
 * @property ConcursoTipo $ConcursoTipo
 * @property ConcursoEstado $ConcursoEstado
 * @property sfGuardUser $sfGuardUser
 * @property Empresa $Empresa
 * @property Producto $Producto
 * @property Doctrine_Collection $ContribucionesCp
 * @property Doctrine_Collection $ConcursoCpArchivo
 * @property Doctrine_Collection $ContribucionCp
 * @property Doctrine_Collection $ConcursoReferendumCp
 * @property Doctrine_Collection $ComentarioCp
 * 
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getIncidencia()            Returns the current record's "incidencia" value
 * @method integer             getConcursoEstadoId()      Returns the current record's "concurso_estado_id" value
 * @method integer             getConcursoTipoId()        Returns the current record's "concurso_tipo_id" value
 * @method integer             getEmpresaId()             Returns the current record's "empresa_id" value
 * @method integer             getProductoId()            Returns the current record's "producto_id" value
 * @method integer             getConcursoCategoriaId()   Returns the current record's "concurso_categoria_id" value
 * @method date                getFechaActivacion()       Returns the current record's "fecha_activacion" value
 * @method date                getFechaReferendum()       Returns the current record's "fecha_referendum" value
 * @method integer             getRoadTypeId()            Returns the current record's "road_type_id" value
 * @method integer             getStatesId()              Returns the current record's "states_id" value
 * @method integer             getCityId()                Returns the current record's "city_id" value
 * @method string              getConcursoAddress()       Returns the current record's "concurso_address" value
 * @method string              getConcursoCode()          Returns the current record's "concurso_code" value
 * @method string              getConcursoOtra()          Returns the current record's "concurso_otra" value
 * @method string              getMail()                  Returns the current record's "mail" value
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method boolean             getDestacado()             Returns the current record's "destacado" value
 * @method date                getFechaDestacado()        Returns the current record's "fecha_destacado" value
 * @method ConcursoCategoria   getConcursoCategoria()     Returns the current record's "ConcursoCategoria" value
 * @method RoadType            getRoadType()              Returns the current record's "RoadType" value
 * @method States              getStates()                Returns the current record's "States" value
 * @method City                getCity()                  Returns the current record's "City" value
 * @method ConcursoTipo        getConcursoTipo()          Returns the current record's "ConcursoTipo" value
 * @method ConcursoEstado      getConcursoEstado()        Returns the current record's "ConcursoEstado" value
 * @method sfGuardUser         getSfGuardUser()           Returns the current record's "sfGuardUser" value
 * @method Empresa             getEmpresa()               Returns the current record's "Empresa" value
 * @method Producto            getProducto()              Returns the current record's "Producto" value
 * @method Doctrine_Collection getContribucionesCp()      Returns the current record's "ContribucionesCp" collection
 * @method Doctrine_Collection getConcursoCpArchivo()     Returns the current record's "ConcursoCpArchivo" collection
 * @method Doctrine_Collection getContribucionCp()        Returns the current record's "ContribucionCp" collection
 * @method Doctrine_Collection getConcursoReferendumCp()  Returns the current record's "ConcursoReferendumCp" collection
 * @method Doctrine_Collection getComentarioCp()          Returns the current record's "ComentarioCp" collection
 * @method ConcursoCp          setName()                  Sets the current record's "name" value
 * @method ConcursoCp          setIncidencia()            Sets the current record's "incidencia" value
 * @method ConcursoCp          setConcursoEstadoId()      Sets the current record's "concurso_estado_id" value
 * @method ConcursoCp          setConcursoTipoId()        Sets the current record's "concurso_tipo_id" value
 * @method ConcursoCp          setEmpresaId()             Sets the current record's "empresa_id" value
 * @method ConcursoCp          setProductoId()            Sets the current record's "producto_id" value
 * @method ConcursoCp          setConcursoCategoriaId()   Sets the current record's "concurso_categoria_id" value
 * @method ConcursoCp          setFechaActivacion()       Sets the current record's "fecha_activacion" value
 * @method ConcursoCp          setFechaReferendum()       Sets the current record's "fecha_referendum" value
 * @method ConcursoCp          setRoadTypeId()            Sets the current record's "road_type_id" value
 * @method ConcursoCp          setStatesId()              Sets the current record's "states_id" value
 * @method ConcursoCp          setCityId()                Sets the current record's "city_id" value
 * @method ConcursoCp          setConcursoAddress()       Sets the current record's "concurso_address" value
 * @method ConcursoCp          setConcursoCode()          Sets the current record's "concurso_code" value
 * @method ConcursoCp          setConcursoOtra()          Sets the current record's "concurso_otra" value
 * @method ConcursoCp          setMail()                  Sets the current record's "mail" value
 * @method ConcursoCp          setUserId()                Sets the current record's "user_id" value
 * @method ConcursoCp          setDestacado()             Sets the current record's "destacado" value
 * @method ConcursoCp          setFechaDestacado()        Sets the current record's "fecha_destacado" value
 * @method ConcursoCp          setConcursoCategoria()     Sets the current record's "ConcursoCategoria" value
 * @method ConcursoCp          setRoadType()              Sets the current record's "RoadType" value
 * @method ConcursoCp          setStates()                Sets the current record's "States" value
 * @method ConcursoCp          setCity()                  Sets the current record's "City" value
 * @method ConcursoCp          setConcursoTipo()          Sets the current record's "ConcursoTipo" value
 * @method ConcursoCp          setConcursoEstado()        Sets the current record's "ConcursoEstado" value
 * @method ConcursoCp          setSfGuardUser()           Sets the current record's "sfGuardUser" value
 * @method ConcursoCp          setEmpresa()               Sets the current record's "Empresa" value
 * @method ConcursoCp          setProducto()              Sets the current record's "Producto" value
 * @method ConcursoCp          setContribucionesCp()      Sets the current record's "ContribucionesCp" collection
 * @method ConcursoCp          setConcursoCpArchivo()     Sets the current record's "ConcursoCpArchivo" collection
 * @method ConcursoCp          setContribucionCp()        Sets the current record's "ContribucionCp" collection
 * @method ConcursoCp          setConcursoReferendumCp()  Sets the current record's "ConcursoReferendumCp" collection
 * @method ConcursoCp          setComentarioCp()          Sets the current record's "ComentarioCp" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConcursoCp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('concurso_cp');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('incidencia', 'string', 2147483647, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2147483647,
             ));
        $this->hasColumn('concurso_estado_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('concurso_tipo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('producto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('concurso_categoria_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_activacion', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_referendum', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('road_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('concurso_address', 'string', 250, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 250,
             ));
        $this->hasColumn('concurso_code', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));
        $this->hasColumn('concurso_otra', 'string', 9, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 9,
             ));
        $this->hasColumn('mail', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('destacado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('fecha_destacado', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ConcursoCategoria', array(
             'local' => 'concurso_categoria_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('RoadType', array(
             'local' => 'road_type_id',
             'foreign' => 'id'));

        $this->hasOne('States', array(
             'local' => 'states_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ConcursoTipo', array(
             'local' => 'concurso_tipo_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ConcursoEstado', array(
             'local' => 'concurso_estado_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasMany('ContribucionCp as ContribucionesCp', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursoCpArchivo', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ContribucionCp', array(
             'local' => 'id',
             'foreign' => 'concurso_cp_id'));

        $this->hasMany('ConcursoReferendumCp', array(
             'local' => 'id',
             'foreign' => 'concurso_cp_id'));

        $this->hasMany('ComentarioCp', array(
             'local' => 'id',
             'foreign' => 'concurso_cp_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'id',
              1 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}