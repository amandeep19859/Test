<?php

/**
 * BaseProfesional
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name_one
 * @property string $last_name_two
 * @property string $address
 * @property string $numero
 * @property string $piso
 * @property string $puerta
 * @property string $telefono
 * @property string $email
 * @property boolean $destacado
 * @property date $fecha_destacado
 * @property date $fecha_activacion
 * @property date $fecha_referendum
 * @property datetime $fecha_revision
 * @property datetime $fecha_deliberacion
 * @property datetime $fecha_observacion
 * @property datetime $fecha_cerrado
 * @property datetime $fecha_rechazado
 * @property datetime $fecha_nulo
 * @property integer $revision_last_state_id
 * @property integer $profesional_estado_id
 * @property integer $profesional_tipo_uno_id
 * @property integer $profesional_tipo_dos_id
 * @property integer $profesional_tipo_tres_id
 * @property integer $road_type_id
 * @property integer $states_id
 * @property integer $city_id
 * @property integer $user_id
 * @property string $active_reason
 * @property integer $dividendo
 * @property boolean $featured
 * @property integer $featured_order
 * @property sfGuardUser $User
 * @property RoadType $RoadType
 * @property States $States
 * @property City $City
 * @property ProfesionalTipoUno $ProfesionalTipoUno
 * @property ProfesionalTipoDos $ProfesionalTipoDos
 * @property ProfesionalTipoTres $ProfesionalTipoTres
 * @property ProfesionalEstado $ProfesionalEstado
 * @property Doctrine_Collection $ProfesionalDestacadosTemporales
 * @property Doctrine_Collection $ProfesionalLetter
 * @property Doctrine_Collection $Kpis
 * @property Doctrine_Collection $ProfesionalDestacada
 * @property Doctrine_Collection $ProfesionalHistorico
 * @property Doctrine_Collection $ProfesionalArchivo
 * @property ProfesionalGoogleMap $profesionalGoogleMap
 * 
 * @method string               getFirstName()                       Returns the current record's "first_name" value
 * @method string               getLastNameOne()                     Returns the current record's "last_name_one" value
 * @method string               getLastNameTwo()                     Returns the current record's "last_name_two" value
 * @method string               getAddress()                         Returns the current record's "address" value
 * @method string               getNumero()                          Returns the current record's "numero" value
 * @method string               getPiso()                            Returns the current record's "piso" value
 * @method string               getPuerta()                          Returns the current record's "puerta" value
 * @method string               getTelefono()                        Returns the current record's "telefono" value
 * @method string               getEmail()                           Returns the current record's "email" value
 * @method boolean              getDestacado()                       Returns the current record's "destacado" value
 * @method date                 getFechaDestacado()                  Returns the current record's "fecha_destacado" value
 * @method date                 getFechaActivacion()                 Returns the current record's "fecha_activacion" value
 * @method date                 getFechaReferendum()                 Returns the current record's "fecha_referendum" value
 * @method datetime             getFechaRevision()                   Returns the current record's "fecha_revision" value
 * @method datetime             getFechaDeliberacion()               Returns the current record's "fecha_deliberacion" value
 * @method datetime             getFechaObservacion()                Returns the current record's "fecha_observacion" value
 * @method datetime             getFechaCerrado()                    Returns the current record's "fecha_cerrado" value
 * @method datetime             getFechaRechazado()                  Returns the current record's "fecha_rechazado" value
 * @method datetime             getFechaNulo()                       Returns the current record's "fecha_nulo" value
 * @method integer              getRevisionLastStateId()             Returns the current record's "revision_last_state_id" value
 * @method integer              getProfesionalEstadoId()             Returns the current record's "profesional_estado_id" value
 * @method integer              getProfesionalTipoUnoId()            Returns the current record's "profesional_tipo_uno_id" value
 * @method integer              getProfesionalTipoDosId()            Returns the current record's "profesional_tipo_dos_id" value
 * @method integer              getProfesionalTipoTresId()           Returns the current record's "profesional_tipo_tres_id" value
 * @method integer              getRoadTypeId()                      Returns the current record's "road_type_id" value
 * @method integer              getStatesId()                        Returns the current record's "states_id" value
 * @method integer              getCityId()                          Returns the current record's "city_id" value
 * @method integer              getUserId()                          Returns the current record's "user_id" value
 * @method string               getActiveReason()                    Returns the current record's "active_reason" value
 * @method integer              getDividendo()                       Returns the current record's "dividendo" value
 * @method boolean              getFeatured()                        Returns the current record's "featured" value
 * @method integer              getFeaturedOrder()                   Returns the current record's "featured_order" value
 * @method sfGuardUser          getUser()                            Returns the current record's "User" value
 * @method RoadType             getRoadType()                        Returns the current record's "RoadType" value
 * @method States               getStates()                          Returns the current record's "States" value
 * @method City                 getCity()                            Returns the current record's "City" value
 * @method ProfesionalTipoUno   getProfesionalTipoUno()              Returns the current record's "ProfesionalTipoUno" value
 * @method ProfesionalTipoDos   getProfesionalTipoDos()              Returns the current record's "ProfesionalTipoDos" value
 * @method ProfesionalTipoTres  getProfesionalTipoTres()             Returns the current record's "ProfesionalTipoTres" value
 * @method ProfesionalEstado    getProfesionalEstado()               Returns the current record's "ProfesionalEstado" value
 * @method Doctrine_Collection  getProfesionalDestacadosTemporales() Returns the current record's "ProfesionalDestacadosTemporales" collection
 * @method Doctrine_Collection  getProfesionalLetter()               Returns the current record's "ProfesionalLetter" collection
 * @method Doctrine_Collection  getKpis()                            Returns the current record's "Kpis" collection
 * @method Doctrine_Collection  getProfesionalDestacada()            Returns the current record's "ProfesionalDestacada" collection
 * @method Doctrine_Collection  getProfesionalHistorico()            Returns the current record's "ProfesionalHistorico" collection
 * @method Doctrine_Collection  getProfesionalArchivo()              Returns the current record's "ProfesionalArchivo" collection
 * @method ProfesionalGoogleMap getProfesionalGoogleMap()            Returns the current record's "profesionalGoogleMap" value
 * @method Profesional          setFirstName()                       Sets the current record's "first_name" value
 * @method Profesional          setLastNameOne()                     Sets the current record's "last_name_one" value
 * @method Profesional          setLastNameTwo()                     Sets the current record's "last_name_two" value
 * @method Profesional          setAddress()                         Sets the current record's "address" value
 * @method Profesional          setNumero()                          Sets the current record's "numero" value
 * @method Profesional          setPiso()                            Sets the current record's "piso" value
 * @method Profesional          setPuerta()                          Sets the current record's "puerta" value
 * @method Profesional          setTelefono()                        Sets the current record's "telefono" value
 * @method Profesional          setEmail()                           Sets the current record's "email" value
 * @method Profesional          setDestacado()                       Sets the current record's "destacado" value
 * @method Profesional          setFechaDestacado()                  Sets the current record's "fecha_destacado" value
 * @method Profesional          setFechaActivacion()                 Sets the current record's "fecha_activacion" value
 * @method Profesional          setFechaReferendum()                 Sets the current record's "fecha_referendum" value
 * @method Profesional          setFechaRevision()                   Sets the current record's "fecha_revision" value
 * @method Profesional          setFechaDeliberacion()               Sets the current record's "fecha_deliberacion" value
 * @method Profesional          setFechaObservacion()                Sets the current record's "fecha_observacion" value
 * @method Profesional          setFechaCerrado()                    Sets the current record's "fecha_cerrado" value
 * @method Profesional          setFechaRechazado()                  Sets the current record's "fecha_rechazado" value
 * @method Profesional          setFechaNulo()                       Sets the current record's "fecha_nulo" value
 * @method Profesional          setRevisionLastStateId()             Sets the current record's "revision_last_state_id" value
 * @method Profesional          setProfesionalEstadoId()             Sets the current record's "profesional_estado_id" value
 * @method Profesional          setProfesionalTipoUnoId()            Sets the current record's "profesional_tipo_uno_id" value
 * @method Profesional          setProfesionalTipoDosId()            Sets the current record's "profesional_tipo_dos_id" value
 * @method Profesional          setProfesionalTipoTresId()           Sets the current record's "profesional_tipo_tres_id" value
 * @method Profesional          setRoadTypeId()                      Sets the current record's "road_type_id" value
 * @method Profesional          setStatesId()                        Sets the current record's "states_id" value
 * @method Profesional          setCityId()                          Sets the current record's "city_id" value
 * @method Profesional          setUserId()                          Sets the current record's "user_id" value
 * @method Profesional          setActiveReason()                    Sets the current record's "active_reason" value
 * @method Profesional          setDividendo()                       Sets the current record's "dividendo" value
 * @method Profesional          setFeatured()                        Sets the current record's "featured" value
 * @method Profesional          setFeaturedOrder()                   Sets the current record's "featured_order" value
 * @method Profesional          setUser()                            Sets the current record's "User" value
 * @method Profesional          setRoadType()                        Sets the current record's "RoadType" value
 * @method Profesional          setStates()                          Sets the current record's "States" value
 * @method Profesional          setCity()                            Sets the current record's "City" value
 * @method Profesional          setProfesionalTipoUno()              Sets the current record's "ProfesionalTipoUno" value
 * @method Profesional          setProfesionalTipoDos()              Sets the current record's "ProfesionalTipoDos" value
 * @method Profesional          setProfesionalTipoTres()             Sets the current record's "ProfesionalTipoTres" value
 * @method Profesional          setProfesionalEstado()               Sets the current record's "ProfesionalEstado" value
 * @method Profesional          setProfesionalDestacadosTemporales() Sets the current record's "ProfesionalDestacadosTemporales" collection
 * @method Profesional          setProfesionalLetter()               Sets the current record's "ProfesionalLetter" collection
 * @method Profesional          setKpis()                            Sets the current record's "Kpis" collection
 * @method Profesional          setProfesionalDestacada()            Sets the current record's "ProfesionalDestacada" collection
 * @method Profesional          setProfesionalHistorico()            Sets the current record's "ProfesionalHistorico" collection
 * @method Profesional          setProfesionalArchivo()              Sets the current record's "ProfesionalArchivo" collection
 * @method Profesional          setProfesionalGoogleMap()            Sets the current record's "profesionalGoogleMap" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfesional extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profesional');
        $this->hasColumn('first_name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('last_name_one', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('last_name_two', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('address', 'string', 70, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 70,
             ));
        $this->hasColumn('numero', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('piso', 'string', 3, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 3,
             ));
        $this->hasColumn('puerta', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 6,
             ));
        $this->hasColumn('telefono', 'string', 9, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 9,
             ));
        $this->hasColumn('email', 'string', 70, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 70,
             ));
        $this->hasColumn('destacado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('fecha_destacado', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_activacion', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_referendum', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_revision', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_deliberacion', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_observacion', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_cerrado', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_rechazado', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_nulo', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('revision_last_state_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('profesional_estado_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profesional_tipo_uno_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profesional_tipo_dos_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profesional_tipo_tres_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('road_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('active_reason', 'string', 2147483647, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('dividendo', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('featured', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('featured_order', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('RoadType', array(
             'local' => 'road_type_id',
             'foreign' => 'id'));

        $this->hasOne('States', array(
             'local' => 'states_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoUno', array(
             'local' => 'profesional_tipo_uno_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoDos', array(
             'local' => 'profesional_tipo_dos_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoTres', array(
             'local' => 'profesional_tipo_tres_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalEstado', array(
             'local' => 'profesional_estado_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('ProfesionalDestacadosTemporales', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasMany('ProfesionalLetter', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasMany('KpiProfesionales as Kpis', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasMany('ProfesionalDestacada', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasMany('ProfesionalHistorico', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasMany('ProfesionalArchivo', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $this->hasOne('ProfesionalGoogleMap as profesionalGoogleMap', array(
             'local' => 'id',
             'foreign' => 'profesional_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'first_name',
             ),
             'uniqueBy' => 
             array(
              0 => 'id',
              1 => 'first_name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}