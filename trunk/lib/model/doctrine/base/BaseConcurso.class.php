<?php

/**
 * BaseConcurso
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $incidencia
 * @property integer $concurso_estado_id
 * @property integer $concurso_tipo_id
 * @property integer $empresa_id
 * @property integer $producto_id
 * @property integer $concurso_categoria_id
 * @property date $fecha_activacion
 * @property date $fecha_referendum
 * @property datetime $fecha_revision
 * @property datetime $fecha_deliberacion
 * @property datetime $fecha_observacion
 * @property datetime $fecha_cerrado
 * @property datetime $fecha_rechazado
 * @property datetime $fecha_nulo
 * @property integer $revision_last_state_id
 * @property integer $road_type_id
 * @property integer $states_id
 * @property integer $city_id
 * @property string $concurso_address
 * @property string $concurso_numero
 * @property string $concurso_piso
 * @property string $concurso_puerta
 * @property integer $user_id
 * @property boolean $destacado
 * @property date $fecha_destacado
 * @property integer $cuestionario_id
 * @property integer $cuestionario_total
 * @property boolean $featured
 * @property integer $featured_order
 * @property sfGuardUser $User
 * @property ConcursoCategoria $ConcursoCategoria
 * @property RoadType $RoadType
 * @property States $States
 * @property City $City
 * @property ConcursoTipo $ConcursoTipo
 * @property ConcursoEstado $ConcursoEstado
 * @property Empresa $Empresa
 * @property Producto $Producto
 * @property Doctrine_Collection $Contribuciones
 * @property Doctrine_Collection $ConcursoArchivo
 * @property Doctrine_Collection $ConcursoHistorico
 * @property Doctrine_Collection $ConcursoReferendum
 * @property Doctrine_Collection $GanadoresConcursos
 * @property Doctrine_Collection $ConcursosDestacadosTemporales
 * @property Doctrine_Collection $ConcursoBeneficio
 * @property Doctrine_Collection $ComentarioConcurso
 * @property ComapnyContestFavouriteList $ComapnyContestFavouriteList
 * @property Doctrine_Collection $ProductContestFavouriteList
 * @property Doctrine_Collection $CuestionarioRespuestaConcurso
 * 
 * @method string                      getName()                          Returns the current record's "name" value
 * @method string                      getIncidencia()                    Returns the current record's "incidencia" value
 * @method integer                     getConcursoEstadoId()              Returns the current record's "concurso_estado_id" value
 * @method integer                     getConcursoTipoId()                Returns the current record's "concurso_tipo_id" value
 * @method integer                     getEmpresaId()                     Returns the current record's "empresa_id" value
 * @method integer                     getProductoId()                    Returns the current record's "producto_id" value
 * @method integer                     getConcursoCategoriaId()           Returns the current record's "concurso_categoria_id" value
 * @method date                        getFechaActivacion()               Returns the current record's "fecha_activacion" value
 * @method date                        getFechaReferendum()               Returns the current record's "fecha_referendum" value
 * @method datetime                    getFechaRevision()                 Returns the current record's "fecha_revision" value
 * @method datetime                    getFechaDeliberacion()             Returns the current record's "fecha_deliberacion" value
 * @method datetime                    getFechaObservacion()              Returns the current record's "fecha_observacion" value
 * @method datetime                    getFechaCerrado()                  Returns the current record's "fecha_cerrado" value
 * @method datetime                    getFechaRechazado()                Returns the current record's "fecha_rechazado" value
 * @method datetime                    getFechaNulo()                     Returns the current record's "fecha_nulo" value
 * @method integer                     getRevisionLastStateId()           Returns the current record's "revision_last_state_id" value
 * @method integer                     getRoadTypeId()                    Returns the current record's "road_type_id" value
 * @method integer                     getStatesId()                      Returns the current record's "states_id" value
 * @method integer                     getCityId()                        Returns the current record's "city_id" value
 * @method string                      getConcursoAddress()               Returns the current record's "concurso_address" value
 * @method string                      getConcursoNumero()                Returns the current record's "concurso_numero" value
 * @method string                      getConcursoPiso()                  Returns the current record's "concurso_piso" value
 * @method string                      getConcursoPuerta()                Returns the current record's "concurso_puerta" value
 * @method integer                     getUserId()                        Returns the current record's "user_id" value
 * @method boolean                     getDestacado()                     Returns the current record's "destacado" value
 * @method date                        getFechaDestacado()                Returns the current record's "fecha_destacado" value
 * @method integer                     getCuestionarioId()                Returns the current record's "cuestionario_id" value
 * @method integer                     getCuestionarioTotal()             Returns the current record's "cuestionario_total" value
 * @method boolean                     getFeatured()                      Returns the current record's "featured" value
 * @method integer                     getFeaturedOrder()                 Returns the current record's "featured_order" value
 * @method sfGuardUser                 getUser()                          Returns the current record's "User" value
 * @method ConcursoCategoria           getConcursoCategoria()             Returns the current record's "ConcursoCategoria" value
 * @method RoadType                    getRoadType()                      Returns the current record's "RoadType" value
 * @method States                      getStates()                        Returns the current record's "States" value
 * @method City                        getCity()                          Returns the current record's "City" value
 * @method ConcursoTipo                getConcursoTipo()                  Returns the current record's "ConcursoTipo" value
 * @method ConcursoEstado              getConcursoEstado()                Returns the current record's "ConcursoEstado" value
 * @method Empresa                     getEmpresa()                       Returns the current record's "Empresa" value
 * @method Producto                    getProducto()                      Returns the current record's "Producto" value
 * @method Doctrine_Collection         getContribuciones()                Returns the current record's "Contribuciones" collection
 * @method Doctrine_Collection         getConcursoArchivo()               Returns the current record's "ConcursoArchivo" collection
 * @method Doctrine_Collection         getConcursoHistorico()             Returns the current record's "ConcursoHistorico" collection
 * @method Doctrine_Collection         getConcursoReferendum()            Returns the current record's "ConcursoReferendum" collection
 * @method Doctrine_Collection         getGanadoresConcursos()            Returns the current record's "GanadoresConcursos" collection
 * @method Doctrine_Collection         getConcursosDestacadosTemporales() Returns the current record's "ConcursosDestacadosTemporales" collection
 * @method Doctrine_Collection         getConcursoBeneficio()             Returns the current record's "ConcursoBeneficio" collection
 * @method Doctrine_Collection         getComentarioConcurso()            Returns the current record's "ComentarioConcurso" collection
 * @method ComapnyContestFavouriteList getComapnyContestFavouriteList()   Returns the current record's "ComapnyContestFavouriteList" value
 * @method Doctrine_Collection         getProductContestFavouriteList()   Returns the current record's "ProductContestFavouriteList" collection
 * @method Doctrine_Collection         getCuestionarioRespuestaConcurso() Returns the current record's "CuestionarioRespuestaConcurso" collection
 * @method Concurso                    setName()                          Sets the current record's "name" value
 * @method Concurso                    setIncidencia()                    Sets the current record's "incidencia" value
 * @method Concurso                    setConcursoEstadoId()              Sets the current record's "concurso_estado_id" value
 * @method Concurso                    setConcursoTipoId()                Sets the current record's "concurso_tipo_id" value
 * @method Concurso                    setEmpresaId()                     Sets the current record's "empresa_id" value
 * @method Concurso                    setProductoId()                    Sets the current record's "producto_id" value
 * @method Concurso                    setConcursoCategoriaId()           Sets the current record's "concurso_categoria_id" value
 * @method Concurso                    setFechaActivacion()               Sets the current record's "fecha_activacion" value
 * @method Concurso                    setFechaReferendum()               Sets the current record's "fecha_referendum" value
 * @method Concurso                    setFechaRevision()                 Sets the current record's "fecha_revision" value
 * @method Concurso                    setFechaDeliberacion()             Sets the current record's "fecha_deliberacion" value
 * @method Concurso                    setFechaObservacion()              Sets the current record's "fecha_observacion" value
 * @method Concurso                    setFechaCerrado()                  Sets the current record's "fecha_cerrado" value
 * @method Concurso                    setFechaRechazado()                Sets the current record's "fecha_rechazado" value
 * @method Concurso                    setFechaNulo()                     Sets the current record's "fecha_nulo" value
 * @method Concurso                    setRevisionLastStateId()           Sets the current record's "revision_last_state_id" value
 * @method Concurso                    setRoadTypeId()                    Sets the current record's "road_type_id" value
 * @method Concurso                    setStatesId()                      Sets the current record's "states_id" value
 * @method Concurso                    setCityId()                        Sets the current record's "city_id" value
 * @method Concurso                    setConcursoAddress()               Sets the current record's "concurso_address" value
 * @method Concurso                    setConcursoNumero()                Sets the current record's "concurso_numero" value
 * @method Concurso                    setConcursoPiso()                  Sets the current record's "concurso_piso" value
 * @method Concurso                    setConcursoPuerta()                Sets the current record's "concurso_puerta" value
 * @method Concurso                    setUserId()                        Sets the current record's "user_id" value
 * @method Concurso                    setDestacado()                     Sets the current record's "destacado" value
 * @method Concurso                    setFechaDestacado()                Sets the current record's "fecha_destacado" value
 * @method Concurso                    setCuestionarioId()                Sets the current record's "cuestionario_id" value
 * @method Concurso                    setCuestionarioTotal()             Sets the current record's "cuestionario_total" value
 * @method Concurso                    setFeatured()                      Sets the current record's "featured" value
 * @method Concurso                    setFeaturedOrder()                 Sets the current record's "featured_order" value
 * @method Concurso                    setUser()                          Sets the current record's "User" value
 * @method Concurso                    setConcursoCategoria()             Sets the current record's "ConcursoCategoria" value
 * @method Concurso                    setRoadType()                      Sets the current record's "RoadType" value
 * @method Concurso                    setStates()                        Sets the current record's "States" value
 * @method Concurso                    setCity()                          Sets the current record's "City" value
 * @method Concurso                    setConcursoTipo()                  Sets the current record's "ConcursoTipo" value
 * @method Concurso                    setConcursoEstado()                Sets the current record's "ConcursoEstado" value
 * @method Concurso                    setEmpresa()                       Sets the current record's "Empresa" value
 * @method Concurso                    setProducto()                      Sets the current record's "Producto" value
 * @method Concurso                    setContribuciones()                Sets the current record's "Contribuciones" collection
 * @method Concurso                    setConcursoArchivo()               Sets the current record's "ConcursoArchivo" collection
 * @method Concurso                    setConcursoHistorico()             Sets the current record's "ConcursoHistorico" collection
 * @method Concurso                    setConcursoReferendum()            Sets the current record's "ConcursoReferendum" collection
 * @method Concurso                    setGanadoresConcursos()            Sets the current record's "GanadoresConcursos" collection
 * @method Concurso                    setConcursosDestacadosTemporales() Sets the current record's "ConcursosDestacadosTemporales" collection
 * @method Concurso                    setConcursoBeneficio()             Sets the current record's "ConcursoBeneficio" collection
 * @method Concurso                    setComentarioConcurso()            Sets the current record's "ComentarioConcurso" collection
 * @method Concurso                    setComapnyContestFavouriteList()   Sets the current record's "ComapnyContestFavouriteList" value
 * @method Concurso                    setProductContestFavouriteList()   Sets the current record's "ProductContestFavouriteList" collection
 * @method Concurso                    setCuestionarioRespuestaConcurso() Sets the current record's "CuestionarioRespuestaConcurso" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConcurso extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('concurso');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('incidencia', 'string', 2147483647, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2147483647,
             ));
        $this->hasColumn('concurso_estado_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('concurso_tipo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('producto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('concurso_categoria_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_activacion', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_referendum', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_revision', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_deliberacion', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_observacion', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_cerrado', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_rechazado', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('fecha_nulo', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
        $this->hasColumn('revision_last_state_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('road_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('concurso_address', 'string', 250, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 250,
             ));
        $this->hasColumn('concurso_numero', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('concurso_piso', 'string', 4, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('concurso_puerta', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 6,
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('destacado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('fecha_destacado', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('cuestionario_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('cuestionario_total', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('featured', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('featured_order', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('ConcursoCategoria', array(
             'local' => 'concurso_categoria_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('RoadType', array(
             'local' => 'road_type_id',
             'foreign' => 'id'));

        $this->hasOne('States', array(
             'local' => 'states_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ConcursoTipo', array(
             'local' => 'concurso_tipo_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ConcursoEstado', array(
             'local' => 'concurso_estado_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasMany('Contribucion as Contribuciones', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursoArchivo', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursoHistorico', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursoReferendum', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('GanadoresConcursos', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursosDestacadosTemporales', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ConcursoBeneficio', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasMany('ComentarioConcurso', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $this->hasOne('ComapnyContestFavouriteList', array(
             'local' => 'id',
             'foreign' => 'contest_id'));

        $this->hasMany('ProductContestFavouriteList', array(
             'local' => 'id',
             'foreign' => 'contest_id'));

        $this->hasMany('CuestionarioRespuestas as CuestionarioRespuestaConcurso', array(
             'local' => 'id',
             'foreign' => 'concurso_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'id',
              1 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}