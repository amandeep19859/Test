<?php

/**
 * BasesfGuardUserData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property array $user_data
 * @property sfGuardUser $User
 * 
 * @method integer         getId()        Returns the current record's "id" value
 * @method integer         getUserId()    Returns the current record's "user_id" value
 * @method string          getName()      Returns the current record's "name" value
 * @method array           getUserData()  Returns the current record's "user_data" value
 * @method sfGuardUser     getUser()      Returns the current record's "User" value
 * @method sfGuardUserData setId()        Sets the current record's "id" value
 * @method sfGuardUserData setUserId()    Sets the current record's "user_id" value
 * @method sfGuardUserData setName()      Sets the current record's "name" value
 * @method sfGuardUserData setUserData()  Sets the current record's "user_data" value
 * @method sfGuardUserData setUser()      Sets the current record's "User" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUserData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_data');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('name', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('user_data', 'array', null, array(
             'type' => 'array',
             'notnull' => true,
             ));


        $this->index('idx_userid_name', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'name',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}