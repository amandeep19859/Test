<?php

/**
 * BaseKpiProfesionales
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $kpi_id
 * @property integer $profesional_id
 * @property integer $suma_valores
 * @property integer $numero_valores
 * @property string $nombre
 * @property Profesional $Profesional
 * @property Kpi $Kpi
 * 
 * @method integer          getKpiId()          Returns the current record's "kpi_id" value
 * @method integer          getProfesionalId()  Returns the current record's "profesional_id" value
 * @method integer          getSumaValores()    Returns the current record's "suma_valores" value
 * @method integer          getNumeroValores()  Returns the current record's "numero_valores" value
 * @method string           getNombre()         Returns the current record's "nombre" value
 * @method Profesional      getProfesional()    Returns the current record's "Profesional" value
 * @method Kpi              getKpi()            Returns the current record's "Kpi" value
 * @method KpiProfesionales setKpiId()          Sets the current record's "kpi_id" value
 * @method KpiProfesionales setProfesionalId()  Sets the current record's "profesional_id" value
 * @method KpiProfesionales setSumaValores()    Sets the current record's "suma_valores" value
 * @method KpiProfesionales setNumeroValores()  Sets the current record's "numero_valores" value
 * @method KpiProfesionales setNombre()         Sets the current record's "nombre" value
 * @method KpiProfesionales setProfesional()    Sets the current record's "Profesional" value
 * @method KpiProfesionales setKpi()            Sets the current record's "Kpi" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKpiProfesionales extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kpi_profesionales');
        $this->hasColumn('kpi_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('profesional_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('suma_valores', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('numero_valores', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profesional', array(
             'local' => 'profesional_id',
             'foreign' => 'id'));

        $this->hasOne('Kpi', array(
             'local' => 'kpi_id',
             'foreign' => 'id'));
    }
}