<?php

/**
 * BaseProfesionalHistorico
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profesional_id
 * @property datetime $date
 * @property integer $estado_inicial
 * @property integer $estado_final
 * @property Profesional $Profesional
 * 
 * @method integer              getProfesionalId()  Returns the current record's "profesional_id" value
 * @method datetime             getDate()           Returns the current record's "date" value
 * @method integer              getEstadoInicial()  Returns the current record's "estado_inicial" value
 * @method integer              getEstadoFinal()    Returns the current record's "estado_final" value
 * @method Profesional          getProfesional()    Returns the current record's "Profesional" value
 * @method ProfesionalHistorico setProfesionalId()  Sets the current record's "profesional_id" value
 * @method ProfesionalHistorico setDate()           Sets the current record's "date" value
 * @method ProfesionalHistorico setEstadoInicial()  Sets the current record's "estado_inicial" value
 * @method ProfesionalHistorico setEstadoFinal()    Sets the current record's "estado_final" value
 * @method ProfesionalHistorico setProfesional()    Sets the current record's "Profesional" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfesionalHistorico extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profesional_historico');
        $this->hasColumn('profesional_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('estado_inicial', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('estado_final', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 3,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profesional', array(
             'local' => 'profesional_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}