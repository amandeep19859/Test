<?php

/**
 * BasePd
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $road_type_id
 * @property string $direccion
 * @property string $localidad
 * @property string $codigopostal
 * @property integer $states_id
 * @property integer $profesional_tipo_uno_id
 * @property integer $profesional_tipo_dos_id
 * @property integer $profesional_tipo_tres_id
 * @property ProfesionalTipoUno $ProfesionalTipoUno
 * @property ProfesionalTipoDos $ProfesionalTipoDos
 * @property ProfesionalTipoTres $ProfesionalTipoTres
 * @property RoadType $RoadType
 * @property States $States
 * @property Doctrine_Collection $PdCarta
 * 
 * @method string              getName()                     Returns the current record's "name" value
 * @method integer             getRoadTypeId()               Returns the current record's "road_type_id" value
 * @method string              getDireccion()                Returns the current record's "direccion" value
 * @method string              getLocalidad()                Returns the current record's "localidad" value
 * @method string              getCodigopostal()             Returns the current record's "codigopostal" value
 * @method integer             getStatesId()                 Returns the current record's "states_id" value
 * @method integer             getProfesionalTipoUnoId()     Returns the current record's "profesional_tipo_uno_id" value
 * @method integer             getProfesionalTipoDosId()     Returns the current record's "profesional_tipo_dos_id" value
 * @method integer             getProfesionalTipoTresId()    Returns the current record's "profesional_tipo_tres_id" value
 * @method ProfesionalTipoUno  getProfesionalTipoUno()       Returns the current record's "ProfesionalTipoUno" value
 * @method ProfesionalTipoDos  getProfesionalTipoDos()       Returns the current record's "ProfesionalTipoDos" value
 * @method ProfesionalTipoTres getProfesionalTipoTres()      Returns the current record's "ProfesionalTipoTres" value
 * @method RoadType            getRoadType()                 Returns the current record's "RoadType" value
 * @method States              getStates()                   Returns the current record's "States" value
 * @method Doctrine_Collection getPdCarta()                  Returns the current record's "PdCarta" collection
 * @method Pd                  setName()                     Sets the current record's "name" value
 * @method Pd                  setRoadTypeId()               Sets the current record's "road_type_id" value
 * @method Pd                  setDireccion()                Sets the current record's "direccion" value
 * @method Pd                  setLocalidad()                Sets the current record's "localidad" value
 * @method Pd                  setCodigopostal()             Sets the current record's "codigopostal" value
 * @method Pd                  setStatesId()                 Sets the current record's "states_id" value
 * @method Pd                  setProfesionalTipoUnoId()     Sets the current record's "profesional_tipo_uno_id" value
 * @method Pd                  setProfesionalTipoDosId()     Sets the current record's "profesional_tipo_dos_id" value
 * @method Pd                  setProfesionalTipoTresId()    Sets the current record's "profesional_tipo_tres_id" value
 * @method Pd                  setProfesionalTipoUno()       Sets the current record's "ProfesionalTipoUno" value
 * @method Pd                  setProfesionalTipoDos()       Sets the current record's "ProfesionalTipoDos" value
 * @method Pd                  setProfesionalTipoTres()      Sets the current record's "ProfesionalTipoTres" value
 * @method Pd                  setRoadType()                 Sets the current record's "RoadType" value
 * @method Pd                  setStates()                   Sets the current record's "States" value
 * @method Pd                  setPdCarta()                  Sets the current record's "PdCarta" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePd extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pd');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('road_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('direccion', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('localidad', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('codigopostal', 'string', 10, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 10,
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('profesional_tipo_uno_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profesional_tipo_dos_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profesional_tipo_tres_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProfesionalTipoUno', array(
             'local' => 'profesional_tipo_uno_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoDos', array(
             'local' => 'profesional_tipo_dos_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProfesionalTipoTres', array(
             'local' => 'profesional_tipo_tres_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('RoadType', array(
             'local' => 'road_type_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('States', array(
             'local' => 'states_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('PdCarta', array(
             'local' => 'id',
             'foreign' => 'pd_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}