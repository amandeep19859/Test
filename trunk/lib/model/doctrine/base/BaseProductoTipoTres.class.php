<?php

/**
 * BaseProductoTipoTres
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $orden
 * @property string $name
 * @property string $image
 * @property integer $producto_tipo_uno_id
 * @property integer $producto_tipo_dos_id
 * @property ProductoTipoUno $ProductoTipoUno
 * @property ProductoTipoDos $ProductoTipoDos
 * @property Doctrine_Collection $Producto
 * @property Doctrine_Collection $EmpresasDestacadas
 * @property Doctrine_Collection $ProductCaseStudy
 * @property Doctrine_Collection $UserProductCaseStudy
 * @property Doctrine_Collection $UserProductCaseStudyRequest
 * @property Doctrine_Collection $ListaCuestionario
 * 
 * @method integer             getOrden()                       Returns the current record's "orden" value
 * @method string              getName()                        Returns the current record's "name" value
 * @method string              getImage()                       Returns the current record's "image" value
 * @method integer             getProductoTipoUnoId()           Returns the current record's "producto_tipo_uno_id" value
 * @method integer             getProductoTipoDosId()           Returns the current record's "producto_tipo_dos_id" value
 * @method ProductoTipoUno     getProductoTipoUno()             Returns the current record's "ProductoTipoUno" value
 * @method ProductoTipoDos     getProductoTipoDos()             Returns the current record's "ProductoTipoDos" value
 * @method Doctrine_Collection getProducto()                    Returns the current record's "Producto" collection
 * @method Doctrine_Collection getEmpresasDestacadas()          Returns the current record's "EmpresasDestacadas" collection
 * @method Doctrine_Collection getProductCaseStudy()            Returns the current record's "ProductCaseStudy" collection
 * @method Doctrine_Collection getUserProductCaseStudy()        Returns the current record's "UserProductCaseStudy" collection
 * @method Doctrine_Collection getUserProductCaseStudyRequest() Returns the current record's "UserProductCaseStudyRequest" collection
 * @method Doctrine_Collection getListaCuestionario()           Returns the current record's "ListaCuestionario" collection
 * @method ProductoTipoTres    setOrden()                       Sets the current record's "orden" value
 * @method ProductoTipoTres    setName()                        Sets the current record's "name" value
 * @method ProductoTipoTres    setImage()                       Sets the current record's "image" value
 * @method ProductoTipoTres    setProductoTipoUnoId()           Sets the current record's "producto_tipo_uno_id" value
 * @method ProductoTipoTres    setProductoTipoDosId()           Sets the current record's "producto_tipo_dos_id" value
 * @method ProductoTipoTres    setProductoTipoUno()             Sets the current record's "ProductoTipoUno" value
 * @method ProductoTipoTres    setProductoTipoDos()             Sets the current record's "ProductoTipoDos" value
 * @method ProductoTipoTres    setProducto()                    Sets the current record's "Producto" collection
 * @method ProductoTipoTres    setEmpresasDestacadas()          Sets the current record's "EmpresasDestacadas" collection
 * @method ProductoTipoTres    setProductCaseStudy()            Sets the current record's "ProductCaseStudy" collection
 * @method ProductoTipoTres    setUserProductCaseStudy()        Sets the current record's "UserProductCaseStudy" collection
 * @method ProductoTipoTres    setUserProductCaseStudyRequest() Sets the current record's "UserProductCaseStudyRequest" collection
 * @method ProductoTipoTres    setListaCuestionario()           Sets the current record's "ListaCuestionario" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductoTipoTres extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto_tipo_tres');
        $this->hasColumn('orden', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('image', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('producto_tipo_uno_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('producto_tipo_dos_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductoTipoUno', array(
             'local' => 'producto_tipo_uno_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ProductoTipoDos', array(
             'local' => 'producto_tipo_dos_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Producto', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $this->hasMany('ProductoDestacado as EmpresasDestacadas', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $this->hasMany('ProductCaseStudy', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $this->hasMany('UserProductCaseStudy', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $this->hasMany('UserProductCaseStudyRequest', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $this->hasMany('ListaCuestionario', array(
             'local' => 'id',
             'foreign' => 'producto_tipo_tres_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'id',
              1 => 'name',
             ),
             ));
        $this->actAs($sluggable0);
    }
}