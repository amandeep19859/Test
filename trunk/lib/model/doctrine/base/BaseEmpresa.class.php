<?php

/**
 * BaseEmpresa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $road_type_id
 * @property string $direccion
 * @property string $numero
 * @property string $piso
 * @property string $puerta
 * @property integer $localidad_id
 * @property string $codigopostal
 * @property integer $dividendo
 * @property integer $divisor
 * @property string $comentario_inicial
 * @property longtext $texto_lista_negra
 * @property string $lista
 * @property integer $valida
 * @property string $persona_contacto
 * @property string $telefono
 * @property string $email
 * @property integer $states_id
 * @property integer $lista_cuestionario_id
 * @property integer $empresa_sector_uno_id
 * @property integer $empresa_sector_dos_id
 * @property integer $empresa_sector_tres_id
 * @property integer $user_id
 * @property integer $concurso_id
 * @property boolean $featured
 * @property integer $featured_order
 * @property sfGuardUser $sfGuardUser
 * @property States $States
 * @property City $Localidad
 * @property RoadType $RoadType
 * @property ListaCuestionario $Cuestionario
 * @property EmpresaSectorUno $EmpresaSectorUno
 * @property EmpresaSectorDos $EmpresaSectorDos
 * @property EmpresaSectorTres $EmpresaSectorTres
 * @property Concurso $concursoDestacado
 * @property Doctrine_Collection $ConcursoCp
 * @property ComapnyFavouriteList $ComapnyFavouriteList
 * @property Doctrine_Collection $EmpresaDestacada
 * @property Doctrine_Collection $CuestionarioRespuestas
 * @property Doctrine_Collection $Kpis
 * @property Doctrine_Collection $Evolucion
 * @property GoogleMap $googleMap
 * @property Doctrine_Collection $ComentariosListaNegra
 * 
 * @method string               getName()                   Returns the current record's "name" value
 * @method integer              getRoadTypeId()             Returns the current record's "road_type_id" value
 * @method string               getDireccion()              Returns the current record's "direccion" value
 * @method string               getNumero()                 Returns the current record's "numero" value
 * @method string               getPiso()                   Returns the current record's "piso" value
 * @method string               getPuerta()                 Returns the current record's "puerta" value
 * @method integer              getLocalidadId()            Returns the current record's "localidad_id" value
 * @method string               getCodigopostal()           Returns the current record's "codigopostal" value
 * @method integer              getDividendo()              Returns the current record's "dividendo" value
 * @method integer              getDivisor()                Returns the current record's "divisor" value
 * @method string               getComentarioInicial()      Returns the current record's "comentario_inicial" value
 * @method longtext             getTextoListaNegra()        Returns the current record's "texto_lista_negra" value
 * @method string               getLista()                  Returns the current record's "lista" value
 * @method integer              getValida()                 Returns the current record's "valida" value
 * @method string               getPersonaContacto()        Returns the current record's "persona_contacto" value
 * @method string               getTelefono()               Returns the current record's "telefono" value
 * @method string               getEmail()                  Returns the current record's "email" value
 * @method integer              getStatesId()               Returns the current record's "states_id" value
 * @method integer              getListaCuestionarioId()    Returns the current record's "lista_cuestionario_id" value
 * @method integer              getEmpresaSectorUnoId()     Returns the current record's "empresa_sector_uno_id" value
 * @method integer              getEmpresaSectorDosId()     Returns the current record's "empresa_sector_dos_id" value
 * @method integer              getEmpresaSectorTresId()    Returns the current record's "empresa_sector_tres_id" value
 * @method integer              getUserId()                 Returns the current record's "user_id" value
 * @method integer              getConcursoId()             Returns the current record's "concurso_id" value
 * @method boolean              getFeatured()               Returns the current record's "featured" value
 * @method integer              getFeaturedOrder()          Returns the current record's "featured_order" value
 * @method sfGuardUser          getSfGuardUser()            Returns the current record's "sfGuardUser" value
 * @method States               getStates()                 Returns the current record's "States" value
 * @method City                 getLocalidad()              Returns the current record's "Localidad" value
 * @method RoadType             getRoadType()               Returns the current record's "RoadType" value
 * @method ListaCuestionario    getCuestionario()           Returns the current record's "Cuestionario" value
 * @method EmpresaSectorUno     getEmpresaSectorUno()       Returns the current record's "EmpresaSectorUno" value
 * @method EmpresaSectorDos     getEmpresaSectorDos()       Returns the current record's "EmpresaSectorDos" value
 * @method EmpresaSectorTres    getEmpresaSectorTres()      Returns the current record's "EmpresaSectorTres" value
 * @method Concurso             getConcursoDestacado()      Returns the current record's "concursoDestacado" value
 * @method Doctrine_Collection  getConcursoCp()             Returns the current record's "ConcursoCp" collection
 * @method ComapnyFavouriteList getComapnyFavouriteList()   Returns the current record's "ComapnyFavouriteList" value
 * @method Doctrine_Collection  getEmpresaDestacada()       Returns the current record's "EmpresaDestacada" collection
 * @method Doctrine_Collection  getCuestionarioRespuestas() Returns the current record's "CuestionarioRespuestas" collection
 * @method Doctrine_Collection  getKpis()                   Returns the current record's "Kpis" collection
 * @method Doctrine_Collection  getEvolucion()              Returns the current record's "Evolucion" collection
 * @method GoogleMap            getGoogleMap()              Returns the current record's "googleMap" value
 * @method Doctrine_Collection  getComentariosListaNegra()  Returns the current record's "ComentariosListaNegra" collection
 * @method Empresa              setName()                   Sets the current record's "name" value
 * @method Empresa              setRoadTypeId()             Sets the current record's "road_type_id" value
 * @method Empresa              setDireccion()              Sets the current record's "direccion" value
 * @method Empresa              setNumero()                 Sets the current record's "numero" value
 * @method Empresa              setPiso()                   Sets the current record's "piso" value
 * @method Empresa              setPuerta()                 Sets the current record's "puerta" value
 * @method Empresa              setLocalidadId()            Sets the current record's "localidad_id" value
 * @method Empresa              setCodigopostal()           Sets the current record's "codigopostal" value
 * @method Empresa              setDividendo()              Sets the current record's "dividendo" value
 * @method Empresa              setDivisor()                Sets the current record's "divisor" value
 * @method Empresa              setComentarioInicial()      Sets the current record's "comentario_inicial" value
 * @method Empresa              setTextoListaNegra()        Sets the current record's "texto_lista_negra" value
 * @method Empresa              setLista()                  Sets the current record's "lista" value
 * @method Empresa              setValida()                 Sets the current record's "valida" value
 * @method Empresa              setPersonaContacto()        Sets the current record's "persona_contacto" value
 * @method Empresa              setTelefono()               Sets the current record's "telefono" value
 * @method Empresa              setEmail()                  Sets the current record's "email" value
 * @method Empresa              setStatesId()               Sets the current record's "states_id" value
 * @method Empresa              setListaCuestionarioId()    Sets the current record's "lista_cuestionario_id" value
 * @method Empresa              setEmpresaSectorUnoId()     Sets the current record's "empresa_sector_uno_id" value
 * @method Empresa              setEmpresaSectorDosId()     Sets the current record's "empresa_sector_dos_id" value
 * @method Empresa              setEmpresaSectorTresId()    Sets the current record's "empresa_sector_tres_id" value
 * @method Empresa              setUserId()                 Sets the current record's "user_id" value
 * @method Empresa              setConcursoId()             Sets the current record's "concurso_id" value
 * @method Empresa              setFeatured()               Sets the current record's "featured" value
 * @method Empresa              setFeaturedOrder()          Sets the current record's "featured_order" value
 * @method Empresa              setSfGuardUser()            Sets the current record's "sfGuardUser" value
 * @method Empresa              setStates()                 Sets the current record's "States" value
 * @method Empresa              setLocalidad()              Sets the current record's "Localidad" value
 * @method Empresa              setRoadType()               Sets the current record's "RoadType" value
 * @method Empresa              setCuestionario()           Sets the current record's "Cuestionario" value
 * @method Empresa              setEmpresaSectorUno()       Sets the current record's "EmpresaSectorUno" value
 * @method Empresa              setEmpresaSectorDos()       Sets the current record's "EmpresaSectorDos" value
 * @method Empresa              setEmpresaSectorTres()      Sets the current record's "EmpresaSectorTres" value
 * @method Empresa              setConcursoDestacado()      Sets the current record's "concursoDestacado" value
 * @method Empresa              setConcursoCp()             Sets the current record's "ConcursoCp" collection
 * @method Empresa              setComapnyFavouriteList()   Sets the current record's "ComapnyFavouriteList" value
 * @method Empresa              setEmpresaDestacada()       Sets the current record's "EmpresaDestacada" collection
 * @method Empresa              setCuestionarioRespuestas() Sets the current record's "CuestionarioRespuestas" collection
 * @method Empresa              setKpis()                   Sets the current record's "Kpis" collection
 * @method Empresa              setEvolucion()              Sets the current record's "Evolucion" collection
 * @method Empresa              setGoogleMap()              Sets the current record's "googleMap" value
 * @method Empresa              setComentariosListaNegra()  Sets the current record's "ComentariosListaNegra" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpresa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('empresa');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('road_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('direccion', 'string', 70, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 70,
             ));
        $this->hasColumn('numero', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('piso', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('puerta', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('localidad_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('codigopostal', 'string', 10, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 10,
             ));
        $this->hasColumn('dividendo', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('divisor', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('comentario_inicial', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('texto_lista_negra', 'longtext', null, array(
             'type' => 'longtext',
             ));
        $this->hasColumn('lista', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('valida', 'integer', 2, array(
             'type' => 'integer',
             'size' => 2,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('persona_contacto', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telefono', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('states_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('lista_cuestionario_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('empresa_sector_uno_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('empresa_sector_dos_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('empresa_sector_tres_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 5,
             ));
        $this->hasColumn('concurso_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('featured', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('featured_order', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));


        $this->index('lista_index', array(
             'fields' => 
             array(
              0 => 'lista',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'cascade'));

        $this->hasOne('States', array(
             'local' => 'states_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('City as Localidad', array(
             'local' => 'localidad_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('RoadType', array(
             'local' => 'road_type_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('ListaCuestionario as Cuestionario', array(
             'local' => 'lista_cuestionario_id',
             'foreign' => 'id'));

        $this->hasOne('EmpresaSectorUno', array(
             'local' => 'empresa_sector_uno_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('EmpresaSectorDos', array(
             'local' => 'empresa_sector_dos_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('EmpresaSectorTres', array(
             'local' => 'empresa_sector_tres_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Concurso as concursoDestacado', array(
             'local' => 'concurso_id',
             'foreign' => 'id'));

        $this->hasMany('ConcursoCp', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasOne('ComapnyFavouriteList', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EmpresaDestacada', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('ListaCuestionarioUser as CuestionarioRespuestas', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('KpiEmpresaProducto as Kpis', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('EmpresaProductoEvolucion as Evolucion', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasOne('GoogleMap as googleMap', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('ComentarioListaNegra as ComentariosListaNegra', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'Localidad',
              2 => 'RoadType',
              3 => 'direccion',
              4 => 'numero',
             ),
             'unique' => true,
             'canUpdate' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}